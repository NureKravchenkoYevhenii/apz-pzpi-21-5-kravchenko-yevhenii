1 ОГЛЯД ЗАГАЛЬНОЇ АРХІТЕКТУРИ СИСТЕМИ ТА ПРИЙНЯТИХ ІНЖЕНЕРНИХ РІШЕНЬ

Front-end частина програмної системи «Parky» розроблена за допомогою наступних програмних засобів: веб-фреймворк Angular, HTML, SCSS/CSS та мова програмування TypeScript. Фреймворк надає зручні для створення компонентної архітектури інструменти, а TypeScript допомагає легко підтримувати інтерфейс для взаємодії з сервером. Застосунок має компонентну архітектуру, яка дозволяє підтримувати модульність та повторно використовувати компоненти, уникаючи дублювання коду та функціональності. Також така архітектура надає змогу легко підтримувати існуючі компоненти та розширювати застасунок шляхом додавання нових компонентів без необхідності модифікувати існуючі. Проект має 2 головні директорії: «components» та «core». Директорія «components» містить у собі усі компоненти застосунку, а «core» – константи, перерахування, моделі, сервіси та класи-помічники.
Для впровадження залежностей був використаний механізм «Dependency injection»; для взаємодії з сервером був використаний модуль «HttpClient» із загальної бібліотеки Angular (приклад використання наведено у Додатку Б); для забезпечення програмної системи локалізацією та інтернаціоналізацією було використано бібліотеку «angular-l10n». Було використано патерн «Декоратор» для забезпечення застосунку тост-повідомленнями з підтримкою локалізації. У результаті було створено сервіс «L10nToastrService», який слугує декоратором для сервісу «ToastrService» з бібліотеки «ngx-toastr» (реалізацію наведено у Додатку Б).

2 ПОБУДОВА UML ДІАГРАМИ ПРЕЦЕНДЕНТІВ

На діаграмі прецендентів (див. рис. 1) можна побачити наступних акторів: адміністратор парковки, системний адміністратор та неавторизований користувач. Неавторизований користувач може зареєструватися у системі та авторизуватися. При реєстрацій він також заповнює профіль користувача. Системний адміністратор має змогу створювати резервні копії даних та змінювати ролі користувачів. Адміністратор парковки може налаштовувати бронювання; бронювати місця на парковці для техніки спеціальних служб; завантажувати дані користувачів у систему; блокувати абонементи користувачів, що порушили правила; переглядати та шукати користувачів; отримувати статистику платежів та статистику зайнятості місць для паркування за певний період часу. Також він має змогу управляти такими колекціями: тарифи, абонементи та місця для паркування

3 ПОБУДОВА UML ДІАГРАМИ КОМПОНЕНТІВ

На діаграмі компонентів (див. Додаток А рис. 2) бачимо структуру front-end частини програмної системи «Parky» та зв’язки між її компонентами. На діаграмі зображено «HttpClient», який слугує для зв’язку front-end частини з сервером. Cервіси «administration.service.ts», «auth.service.ts», «booking.service.ts», «membership.service.ts», «parking-place.service.ts», «user-service.ts» та «tarif.service.ts» використовують його з метою досутпу до API. Компоненти «Parking places component», «Login component», «Administration component», «Tarifs component», «Registration component», «Memberships component», «Users component» та «Booking component» у свою чергу використовують відповідні сервіси для обробки даних. На кінець, усі компоненти формують модуль – «App.module.ts», який надає інтерфейс усього веб-застосунку. Також бачимо, що «App.module.ts» використовує «App-routing.module.ts» для забезпечення маршрутизації усередині застоснку.

4 ПОБУДОВА UML ДІАГРАМИ ДІЯЛЬНОСТІ

На діаграмі діяльності (див. Додаток А рис. 3) можна побачити дії, які можна виконати при взаємодії з fronend-частиною програмної системи. Для початку користувач має увійти в систему. Також він повинен мати права системного адміністратора чи адміністратора парковки. У випадку, коли користувач їх не має, він не матиме доступу.
В залежності від прав, користувач зможе виконувати різні дії. Авторизувавшись у системі з правами системного адміністратора, він зможе створювати резервні копії даних, управляти ролями користувачів та вийти із системи.
Якщо користувач увійде у систему з правами адміністратора парковки, то він зможе налаштовувати бронювання, блокувати абонементи, бронювати місця на парковці для спеціальної техніки, завантажувати дані користувачів у систему та отримувати статистику. Також він зможе управляти колекціями тарифів, абонементів та місць для паркування. У будь-який момент користувач має можливість покинути сайт.

5 ПОБУДОВА UML ДІАГРАМИ СТАНІВ

UML діаграма станів (див. Додаток А рис.4) більш детально відображає процеси, що відбуваються при взаємодії з frontend-частиною програмної системи.
Для входу у систему користувач повинен авторизуватися у системі. Для цього він заповнює форму логіну і, у випадку якщо дані було введено вірно, отримує JWT-токен авторизації. Обов’язковою умовою доступу до сайту є наявність у користувача прав системного адміністратора або адміністратора парковки.
В залежності від прав, користувач зможе виконувати різні дії. Після успішної авторизації у якості системного адміністратора, користувач має змогу створювати резервні копії даних. Для цього необхідно перейти на вкладку «Адміністрування», ввести шлях збереження та натиснути кнопку «Зробити резервне копіювання». Також він має змогу управляти ролями користувачів. Для цього треба перейти на вкладку «Користувачі» та змінити роль у обраного користувача.
Після авторизації у системі з правами адміністратора парковки користувач має змогу виконувати наступні дії. Для налаштування бронювання необхідно перейти на вкладку «Адміністрування», внести бажані зміни та натиснути кнопку «Зберегти налаштування». Для блокування абонементів треба перейти на вкладку «Користувачі», натиснути на кнопку «Деталі» у бажаного користувача, після чого у відкритому вікні натиснути кнопку «Заблокувати абонемент» та ввести коментар. Для бронювання місць на парковці для техніки спеціальних служб необхідно перейти на вкладку «Бронювання» та додати бронювання обравши бажану дату на час. Для того, щоб завантажити дані користувачів у систему, треба перейти на вкладку «Користувачі» обрати файл із даними та натиснути кнопку «Завантажити». Для отримання статистики потрібно перейти на відповідну вкладку, обрати період часу та натиснути відповідну кнопку для завантаження звіту.
Для управління колекціями тарифів, абонементів та місць для паркування необхідно перейти на відповідну вкладку («Тарифи», «Абонементи» або «Місця для паркування») та внести бажані зміни (додати, редагувати чи видалити ту чи іншу сутність).
Варто також зазначити, що усі дії супроводжуються повідомленнями про успішність чи помилку.

ВИСНОВКИ

У результаті виконання лабораторної роботи була розроблена front-end частина програмної системи «Parky». У ході роботи також були створені такі діаграми: UML діаграма прецендентів, UML діаграма компонентів, UML діаграма діяльності та UML діаграма компонентів.
